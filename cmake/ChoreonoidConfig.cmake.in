# Use the following variables to compile and link against Choreonoid:
# CHOREONOID_FOUND            - True if Choreonoid was found on your system
# CHOREONOID_VERSION_STRING   - A human-readable string containing the version
# CHOREONOID_VERSION_MAJOR    - The major version of Choreonoid
# CHOREONOID_VERSION_MINOR    - The minor version of Choreonoid
# CHOREONOID_VERSION_PATCH    - The patch version of Choreonoid
# CHOREONOID_ROOT_DIR         - The base directory of Choreonoid
# CHOREONOID_CXX_STANDARD     - The c++ standard version used to build Choreonoid (11, 14, or 17)
# CHOREONOID_DEFINITIONS      - Definitions needed to build with Choreonoid
# CHOREONOID_INCLUDE_DIRS     - List of directories of Choreonoid and it's dependencies
# CHOREONOID_LIBRARY_DIRS     - List of directories of Choreonoid and it's dependencies
# CHOREONOID_LIBRARIES        - List of directories of Choreonoid and it's dependencies

set(CHOREONOID_ROOT_DIR @CMAKE_INSTALL_PREFIX@)

set(CHOREONOID_VERSION_STRING @CHOREONOID_VERSION_STRING@)
set(CHOREONOID_VERSION_MAJOR @CHOREONOID_VERSION_MAJOR@)
set(CHOREONOID_VERSION_MINOR @CHOREONOID_VERSION_MINOR@)
set(CHOREONOID_VERSION_PATCH @CHOREONOID_VERSION_PATCH@)

set(CHOREONOID_CXX_STANDARD @CMAKE_CXX_STANDARD@)
set(CHOREONOID_DEFINITIONS @definitions@)
set(CHOREONOID_DEFAULT_FVISIBILITY_HIDDEN @CHOREONOID_DEFAULT_FVISIBILITY_HIDDEN@)
set(CHOREONOID_INCLUDE_DIRS @CHOREONOID_SDK_INCLUDE_DIRS@)
set(CHOREONOID_LIBRARY_DIRS @library_dirs@)
set(CHOREONOID_UTIL_LIBRARIES CnoidUtil @Boost_SYSTEM_LIBRARY@ @Boost_FILESYSTEM_LIBRARY@)
set(CHOREONOID_BASE_LIBRARIES ${CHOREONOID_UTIL_LIBRARIES} CnoidBase)
set(CHOREONOID_BODY_LIBRARIES ${CHOREONOID_UTIL_LIBRARIES} CnoidBody)
set(CHOREONOID_BODY_PLUGIN_LIBRARIES ${CHOREONOID_BASE_LIBRARIES} CnoidBody CnoidBodyPlugin)
set(CHOREONOID_LIBRARIES ${CNOD_BODY_LIBRARIES} ${CHOREONOID_BODY_PLUGIN_LIBRARIES})
set(CHOREONOID_VERSION_SUBDIR @CHOREONOID_VERSION_SUBDIR@)
set(CHOREONOID_BIN_SUBDIR bin)
set(CHOREONOID_BIN_DIR @CMAKE_INSTALL_PREFIX@bin)
set(CHOREONOID_LIB_SUBDIR lib)
set(CHOREONOID_LIB_DIR @CMAKE_INSTALL_PREFIX@/lib)
set(CHOREONOID_PLUGIN_SUBDIR @CHOREONOID_PLUGIN_SUBDIR@)
set(CHOREONOID_PLUGIN_DIR @CMAKE_INSTALL_PREFIX@/@CHOREONOID_PLUGIN_SUBDIR@)
set(CHOREONOID_SHARE_SUBDIR @CHOREONOID_SHARE_SUBDIR@)
set(CHOREONOID_SHARE_DIR @CMAKE_INSTALL_PREFIX@/@CHOREONOID_SHARE_DIR@)
set(CHOREONOID_CMAKE_CONFIG_SUBDIR @CHOREONOID_CMAKE_CONFIG_SUBDIR@)
set(CHOREONOID_ENABLE_INSTALL_RPATH OFF)
set(CHOREONOID_INSTALL_SDK OFF)

MARK_AS_ADVANCED(
  CHOREONOID_ROOT_DIR
  CHOREONOID_INCLUDE_DIRS
  CHOREONOID_LIBRARIES
  CHOREONOID_Boost_VERSION
  CHOREONOID_CFLAGS_OTHER
  CHOREONOID_LDFLAGS_OTHER
  CHOREONOID_LIBRARY_SUFFIX
  )

include(ChoreonoidBasicBuildFunctions.cmake)

set(CHOREONOID_ENABLE_PYTHON @ENABLE_PYTHON@)

if(CHOREONOID_ENABLE_PYTHON)
  set(CHOREONOID_PYTHON_LIBRARIES CnoidPyUtil CnoidPyBase)
  set(CHOREONOID_PYTHON_SUBDIR @CNOID_PYTHON_SUBDIR@)
  set(CHOREONOID_USE_PYBIND11 @USE_PYBIND11@) # This variable is kept for backward compatibility
  include(ChoreonoidPythonBuildFunctions.cmake)
endif()

file(GLOB extmodules LIST_DIRECTORIES false "ext/*.cmake")
foreach(module ${extmodules})
  include(module)
endforeach()
